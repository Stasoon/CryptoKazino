from aiogram import Router
from aiogram.filters import Command, CommandObject
from aiogram.types import Message

from src.utils.crypto_bot import create_usdt_invoice, delete_old_checks
from config import IS_ACTION_EVENT_ACTIVE


async def handle_help_cmd(message: Message):
    help_text = (
        '<code>/admin</code> ‚Äî –ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \n\n'
        
        '<code>/startevent</code> ‚Äî –ù–∞—á–∞—Ç—å –∞–∫—Ü–∏—é —Å x1.1 —Å—Ç–∞–≤–∫–∞–º–∏ \n'
        '<code>/addbalance —Å—É–º–º–∞_usdt</code> ‚Äî –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è \n'
        '<code>/deloldchecks</code> ‚Äî –£–¥–∞–ª–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–∏, –∫–æ—Ç–æ—Ä—ã–º –±–æ–ª—å—à–µ 2 –¥–Ω–µ–π \n'
    )
    await message.answer(text=help_text)


async def handle_toggle_action_event(message: Message):
    global IS_ACTION_EVENT_ACTIVE
    IS_ACTION_EVENT_ACTIVE = not IS_ACTION_EVENT_ACTIVE

    if IS_ACTION_EVENT_ACTIVE:
        await message.answer('üéâ –ê–∫—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!')
    else:
        await message.answer('üõë –ê–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞')


async def handle_top_up_crypto_bot_balance(message: Message, command: CommandObject):
    if not command.args:
        await message.answer(text='–ü–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ USDT —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å!')
        return

    try:
        amount = float(command.args)
    except ValueError:
        await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ!')
        return

    invoice = await create_usdt_invoice(amount=amount)
    await message.answer(f"–ü–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á—ë—Ç –ø–æ <a href='{invoice.bot_invoice_url}'>—Å—Å—ã–ª–∫–µ</a>")


async def handle_delete_old_checks(message: Message):
    deleted_checks = await delete_old_checks()
    deleted_checks_text = '\n'.join([str(i) for i in deleted_checks])
    await message.answer(text=f'–ß–µ–∫–∏ —É–¥–∞–ª–µ–Ω—ã: \n\n{deleted_checks_text}')


def register_admin_commands_handlers(router: Router):
    router.message.register(handle_help_cmd, Command('help'))

    router.message.register(handle_toggle_action_event, Command('startevent'))

    router.message.register(handle_top_up_crypto_bot_balance, Command('addbalance'))

    router.message.register(handle_delete_old_checks, Command('deloldchecks'))

